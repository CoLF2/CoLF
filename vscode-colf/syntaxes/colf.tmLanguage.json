{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Twelf",
  "patterns": [
    { "include": "#declarations" },
    {
      "include": "#keywords"
    },
    {
      "include": "#comments"
    },
    { "include": "#operators" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.percentage.colf",
          "match": "%[^a-z{].*$"
        },
        {
          "name": "comment.block.colf",
          "begin": "%{",
          "end": "}%"
        }
      ]
    },
    "declarations": {
      "patterns": [
        {
          "match": "([^[:space:]]+)[[:space:]]*(:)",
          "captures": {
            "1": { "name": "entity.name.function.colf" },
            "2": {
              "name": "keyword.other.colf punctuation.other.colon punctuation.colon"
            }
          }
        },
        {
          "match": "(^|\\.)([^%:[:space:]]*?)[[:space:]]*=",
          "captures": {
            "2": {
              "name": "variable.other.declaration.colf"
            }
          }
        },
        {
          "name": "variable.parameter.colf",
          "match": "\\b[A-Z][[:alnum:]]*\\b"
        }
      ]
    },

    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.colf",
          "match": "(\\%mode|\\%infix|\\%prefix|\\%abbrev|\\%postfix|\\%name|\\%freeze|\\%clause|\\%define|\\%solve|\\%querytabled|\\%query|\\%tabled|\\%deterministic|\\%unique|\\%block|\\%worlds|\\%covers|\\%total|\\%terminates|\\%reduces|\\%theorem|\\%prove|\\%assert|\\%establish|\\%sig|\\%struct|\\%where|\\%include|\\%open|\\%use)\\b"
        },
        {
          "name": "keyword.control.colf",
          "match": "\\%(\\w+)"
        },
        {
          "name": "keyword.other",
          "match": "(\\.|:|\\btype\\b)"
        },
        {
          "name": "keyword.other",
          "match": "(\\.|:|\\bcotype\\b)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.colf",
          "match": "([[:space:]]|^)+(->|<-)[[:space:]]+"
        }
      ]
    }
  },
  "scopeName": "source.colf"
}
